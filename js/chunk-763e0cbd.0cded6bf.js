(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-763e0cbd"],{"1f81":function(a,e,t){"use strict";var s=t("729c"),r=t.n(s);r.a},"729c":function(a,e,t){},a348:function(a,e,t){a.exports=t.p+"img/ghidra_jump_xref_specialcost.1cc80a51.gif"},af89:function(a,e,t){"use strict";t.r(e);var s=function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"tutorial"},[s("h1",[a._v("オフセットを理解しよう")]),s("p",[a._v("肝心のコード開発チュートリアルの前に必ず覚えてほしいのがアドレスのオフセット問題である.")]),s("p",[a._v("逆アセンブラの都合上, IDAとGHIDRAではオフセットが0x7100000000ズレてしまっており, 更にIDAでもNSOとELFで解析した場合に0x100ズレているという問題がある.")]),s("p",[a._v("このとき, 正しいアドレスを表示しているのはNSOをIDAで解析したデータなので, GHIDRAでNSOを分析したときに表示されるアドレスは真の値から0x7100000100ズレていることになる.")]),s("p",[a._v("このズレは厄介そうな気がするのだが, 実際にはIPSwitch側でバイトオフセットを設定することができるため, 0x100のズレに関しては考えなくて良い.")]),s("v-data-table",{attrs:{headers:a.headers,items:a.address,dark:"","hide-default-footer":""}}),s("p",[a._v("なので, GHIDRAで開発したコードをIPSwitch形式に変換するときには「アドレスを0x7100000000減らす」または「先頭の0x71を削除する」という処理が必要なことを覚えておいてください.")]),s("h1",[a._v("スペシャルコストを0にしよう")]),s("p",[a._v("スプラトゥーンではブキごとにスペシャル発動に必要な塗りポイントが決まっていますが, それは内部パラメータではスペシャルコストとして扱われています. この値を0にすることによって常にスペシャルが発動できるようになります.")]),s("h2",[a._v("スペシャルコストを参照しているサブルーチンを見つける")]),s("p",[a._v("あるパラメータの値をパッチでいじろうと思った場合, 「そのパラメータが内部データ的になんと呼ばれているか」というのが必ず必要になってきます. 今回の場合は「スペシャルコスト」ということがわかっているので問題ないですが, 自分で新たに何かを弄ろうとする場合はそのパラメータ名を推測しなければいけません.")]),s("p",[a._v("そしてパラメータ名にアタリをつけたら, テキスト検索でそのパラメータ名が「定義されている」または「呼び出されている」サブルーチンを探します. これを全データから探すのは面倒ですが, 定義された様々なパラメータ名が載っているテーブルがあるのでその周辺を探せばあっさり見つかることが多いです.")]),s("v-data-table",{attrs:{headers:a.headers,items:a.tables,dark:"","hide-default-footer":""}}),s("p",[a._v("そのパラメータが載っているテーブルのアドレスは上の表のとおりなので確認してみましょう.")]),s("p",[a._v("そしてテキスト検索をかけると, SpecialCostが定義されているのが0x7103711e8aであることがわかると思います.")]),s("h2",[a._v("参照先を調べよう")]),s("p",[a._v("しかし, これだけではまだSpecialCostという文字列を見つけただけで実際に値を変更することはできません. パッチを作成するためにはこの「0x7103711e8aのSpecialCostという文字列を参照している」サブルーチンを見つける必要があるのです.")]),s("p",[a._v("もちろん馬鹿正直に参照先を調べていると日が暮れても終わりませんが, 逆アセンブラにはXREFという参照先にジャンプできる機能があります. 今回はこれを使います.")]),s("v-img",{attrs:{src:t("a348"),width:"80%","max-width":"600px"}}),s("p",[a._v("スペシャルコストのXREFであるcreate:7100038e98をダブルクリックするとジャンプすることができます.")]),s("h2",[a._v("値の設定方法を覚えよう")]),s("p",[a._v(" さて, アドレス7100038e98にジャンプし, この付近でSpecialCostに関するパラメータを弄っていることがわかりました. しかし, このサブルーチンがただスペシャルコストを「参照」しているのか, それとも「設定」しているのかはわかりません. それは自分で解析して調べる必要があります. ただ, 今回はチュートリアルですのでそこまでは言及しません. ")]),s("p",[a._v(" ではこのサブルーチンがスペシャルコストを設定しているサブルーチンだとして, その値を0にするにはどうすればよいでしょうか. そのためにはまず, スプラトゥーンがどうやって各パラメータ（スペシャルコスト以外にも）に値を設定しているか理解する必要があります. ")]),s("h1",[a._v("スプラトゥーンでのパラメータ設定方法")]),s("p",[a._v(" スプラトゥーンではブキやステージのパラメータを設定する際に, BYMLという設定ファイル（暗号化されたXML）から「パラメータ名」と「値」を読み込み, それをmainで設定しています. そしてmainで設定するときに「パラメータ名を引数にしてXMLから値を読み取ってその値を返すサブルーチン」が呼び出されます. なのでそのサブルーチンを弄って別の値を返すようにすればいいのです. ")]),s("p")],1)},r=[],i={data:function(){return{headers:[{text:"逆アセンブラ",align:"start",sortable:!1,value:"name"},{text:"アドレス",align:"start",sortable:!1,value:"offset"}],address:[{name:"GHIDRA(NSO)",offset:"0x7100000000"},{name:"IDA(ELF)",offset:"0x00000000"}],tables:[{name:"GHIDRA(NSO)",offset:"0x71037106c4"},{name:"IDA(ELF)",offset:"0x37106c4"}],parameters:[{}]}}},n=i,p=(t("1f81"),t("2877")),c=t("6544"),v=t.n(c),l=t("8fea"),o=t("adda"),d=Object(p["a"])(n,s,r,!1,null,null,null);e["default"]=d.exports;v()(d,{VDataTable:l["a"],VImg:o["a"]})}}]);